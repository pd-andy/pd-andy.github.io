{"version":3,"sources":["../node_modules/elm-promisify/index.js","js/mostInViewport.js","js/scrollTo.js","main.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["hasPromise","window","promisify","elm","node","flags","app","init","then","f","requestAnimationFrame","Promise","prepare","lastFocusedSection","e","sections","Array","from","target","children","map","section","bounding","getBoundingClientRect","y","Math","abs","id","inViewport","innerHeight","height","filter","sort","a","b","focusedSection","shift","document","querySelector","scrollIntoView","behavior","history","pushState","Elm","Main","ports","scrollToElement","subscribe","addEventListener","focusedElement","onFocusChange","send","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","isArray","length","concat","Function","deps","cached","cache","some","cb"],"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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["const hasPromise = 'Promise' in window\n\n// Promisify an elm app to guarantee the app has rendered at least once before\n// we start doing things.\n//   const node = document.querySelector('#app')\n//   const flags = {}\n//\n//   promisify(Elm.Main, { node, flags })\n//     .then(app => {\n//       ...\n//     })\nexport const promisify = (elm, { node, flags = {} }) => {\n  const app = elm.init({ node, flags })\n  const then = f => window.requestAnimationFrame(() => f(app))\n\n  // If the browser doesn't have native Promise support, we return a 'thenable'\n  // which mimics the Promise API.\n  return hasPromise ? new Promise(then) : { then }\n}\n\n// Takes an un-initialised elm app (such as Elm.Main) and returns an objbect\n// that mimics the elm app API. Essentially a means of \"defering\" the promisify\n// process if you don't want to init your app right away.\n//   const node = document.querySelector('#app')\n//   const flags = {}\n//\n//   const elm = prepare(Elm.Main, { node, flags })\n//\n//   elm.init({ node, flags })\n//     .then(app => {\n//       ...\n//     })\nexport const prepare = elm => ({\n  init ({ node, flags }) {\n    return promisify(elm, { node, flags })\n  }\n})\n\n// Default export is promisify because I expect that is the one more likely to\n// be used\nexport default promisify\n","// We keep track of the last focused section so that we only send updates to\n// the elm app when things change. This prevents us from blasting elm with\n// data every time we scroll.\nlet lastFocusedSection = ''\n\nexport default e => {\n  // Get all of this element's children and work out which ones are currently\n  // visible in the viewport.\n  const sections = Array.from(e.target.children)\n    // Map each element to an object with only the useful information in it.\n    .map(section => {\n      const bounding = section.getBoundingClientRect()\n\n      return {\n        y: Math.abs(bounding.y),\n        id: section.id,\n        inViewport: bounding.y < window.innerHeight && bounding.y > -window.innerHeight - bounding.height\n      }\n    })\n    // Filter out all the elements that aren't currently visible in the viewport.\n    .filter(section => section.inViewport)\n    // Sort the array so that the most prominent section is the first item in\n    // the array.\n    .sort((a, b) => a.y - b.y)\n  //\n  const focusedSection = sections.shift()\n\n  if (focusedSection.id !== lastFocusedSection) {\n    lastFocusedSection = focusedSection.id\n    return focusedSection.id\n  } else {\n    lastFocusedSection = focusedSection.id\n    return null\n  }\n}\n","export default id => {\n  document.querySelector(`#${id}`).scrollIntoView({\n    behavior: 'smooth'\n  })\n  window.history.pushState(null, null, `#${id}`)\n}\n","import { Elm } from './elm/Main.elm'\nimport { promisify } from 'elm-promisify'\nimport mostInViewport from './js/mostInViewport'\nimport scrollIntoView from './js/scrollTo'\n\nconst node = document.querySelector('#elm-container')\nconst flags = {}\n\n// elmPromisify resolves an elm app after the next animation frame, guaranteeing\n// the elm app gets a chance to render at least once.\npromisify(Elm.Main, { node, flags }).then(app => {\n  // elm -> js ports\n  app.ports.scrollToElement.subscribe(scrollIntoView)\n\n  // js -> elm ports\n  document.querySelector('main').addEventListener('scroll', e => {\n    const focusedElement = mostInViewport(e)\n\n    if (focusedElement) {\n      app.ports.onFocusChange.send(focusedElement)\n      window.history.pushState(null, null, `#${focusedElement}`)\n    }\n  })\n})\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}